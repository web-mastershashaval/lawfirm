# Generated by Django 3.1 on 2021-01-03 20:53

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import djmoney.models.fields
import djmoney.models.validators
import multiselectfield.db.fields
import users.functions


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=30, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=30, verbose_name='Last Name')),
                ('user_type', models.CharField(choices=[('M', 'Manager'), ('L', 'Lawyer'), ('C', 'Customer')], default='C', max_length=1, verbose_name='User Type')),
                ('gender', models.CharField(choices=[('', 'Select'), ('F', 'Female'), ('M', 'Male'), ('O', 'Other')], max_length=1)),
                ('pro_pic', models.ImageField(default='lawyers/defaults/img/user_pro_pic.jpg', upload_to=users.functions.user_dir, validators=[users.functions.file_size], verbose_name='Profile Picture')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='LawyerProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about', models.TextField(max_length=500)),
                ('experience', models.IntegerField(verbose_name='Experience in Year')),
                ('days', multiselectfield.db.fields.MultiSelectField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], max_length=13, verbose_name='Working Days')),
                ('time_start', models.TimeField(verbose_name='Office Hours Start')),
                ('time_end', models.TimeField(verbose_name='Office Hours End')),
                ('fee_currency', djmoney.models.fields.CurrencyField(choices=[('EUR', 'Euro'), ('INR', 'Indian Rupee'), ('BDT', 'Taka'), ('USD', 'US Dollar')], default='EUR', editable=False, max_length=3)),
                ('fee', djmoney.models.fields.MoneyField(decimal_places=2, default_currency='EUR', max_digits=10, validators=[djmoney.models.validators.MinMoneyValidator(0), djmoney.models.validators.MaxMoneyValidator(400000), djmoney.models.validators.MaxMoneyValidator({'EUR': 4000, 'USD': 4000})], verbose_name='Consultation Fee')),
                ('document', models.ImageField(upload_to=users.functions.user_dir_lawyer, validators=[users.functions.file_size], verbose_name='Official Document')),
                ('is_verified', models.BooleanField(default=False)),
                ('categories', models.ManyToManyField(to='users.Category')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flat_number', models.CharField(blank=True, max_length=10, verbose_name='Flat Number')),
                ('apartment_number', models.CharField(blank=True, max_length=10, verbose_name='Apartment Number')),
                ('street', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=20)),
                ('state', models.CharField(max_length=20)),
                ('postal_code', models.IntegerField(validators=[django.core.validators.MaxValueValidator(9999999999)], verbose_name='Postal Code')),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
